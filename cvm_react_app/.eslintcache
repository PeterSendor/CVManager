[{"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/index.js":"1","/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/reportWebVitals.js":"2","/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/App.js":"3"},{"size":500,"mtime":1608849474730,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608849474730,"results":"6","hashOfConfig":"5"},{"size":7784,"mtime":1609983240033,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"441dku",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/index.js",[],["16","17"],"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/reportWebVitals.js",[],"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/App.js",["18","19","20","21"],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: '#d41274', \n      \n    },\n    textField: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(0),\n      marginTop: theme.spacing(1),\n      width: '35ch', \n      background: '#fff', \n      borderRadius: 6,\n      \n    },\n  }),\n);\nconst inputStyles_name_surname = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: '#d41274', \n      \n    },\n    textField: {\n      marginLeft: theme.spacing(0),\n      marginRight: theme.spacing(1.5),\n      marginTop: theme.spacing(1),\n      width: '35ch', \n      background: '#fff', \n      borderRadius: 6,\n      \n    },\n  }),\n);\nconst loginButtonStyle = theme => ({\n  root: {\n    position: 'absolute',\n    top: '20px',\n    left: '1050px',\n    borderRadius: 6,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n});\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#d41274',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#d41274',\n      contrastText: '#fff',\n    },\n  },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n});\ntheme.overrides = {\n  ...theme.overrides,\n  MuiButton: {\n      label: {\n        ...theme.label,\n        color:theme.palette.primary.contrastText,\n      }\n  },\n}\n\nfunction LoginBox (props) {\n  const loginButtonsStyle = {}; \n  const classes = inputStyles();\n  const loginBoxStyle = {\n    1: \"loginBox_signin\", \n    0: \"loginBox_register\"\n  };\n\n  if (props.buttonSelector === 1) {\n\n    loginButtonsStyle.button1 = \"contained\"; \n    loginButtonsStyle.button2 = null;\n    loginButtonsStyle.colorButton1 = \"primary\";  \n    loginButtonsStyle.colorButton2 = \"secondary\"; \n    \n  } else if (props.buttonSelector === 0 ) {\n\n    loginButtonsStyle.button1 = null; \n    loginButtonsStyle.button2 = \"contained\";\n    loginButtonsStyle.colorButton1 = \"secondary\";  \n    loginButtonsStyle.colorButton2 = \"primary\";  \n\n  }\n\n  return (\n    <div \n      className={loginBoxStyle[props.buttonSelector]}>\n      \n      <ButtonGroup \n        aria-label=\"outlined primary button group\"\n        className=\"activeLoginButton\"\n        >\n      <ThemeProvider theme={theme}>\n     \n        <Button\n          variant={loginButtonsStyle.button1}\n          color={loginButtonsStyle.colorButton1}\n          className=\"loginButtonCustomisation\"\n          onClick = {props.onclickButton1}\n          \n        >Sign in</Button>\n      \n        <Button \n          variant={loginButtonsStyle.button2}\n          color={loginButtonsStyle.colorButton2}\n          className=\"loginButtonCustomisation\"\n          onClick = {props.onclickButton2}\n          >Register\n        </Button>\n\n      </ThemeProvider>\n      </ButtonGroup>\n\n      \n    </div>\n  )\n}\nfunction LoginTextAreas (props) {\n  const classes = inputStyles();\n  const option = props.textAreasSelector; \n  const classes2 = inputStyles_name_surname();\n\n  if (option === 1) {\n  return (\n  <div>\n    <div className=\"login_password_group\">\n      <TextField\n        id=\"loginTextArea\"\n        className={classes.textField}\n        variant=\"filled\"\n        label=\"Please enter your login\"\n        margin=\"dense\"\n      />\n      <TextField\n        id=\"passwordTextArea\"\n        className={classes.textField}\n        variant=\"filled\"\n        margin=\"dense\"\n        label=\"Please enter your password\"\n        type=\"password\"   \n      />    \n          \n    </div>\n\n      <ThemeProvider theme={theme}>\n      <Button \n        variant=\"contained\"\n        color=\"secondary\"\n        className=\"sign_in_button_signin\"\n        >Let's start!\n      </Button>\n      </ThemeProvider>\n  </div>\n  \n)} else if (option === 0) {\n  return (\n    <div>\n      <div className=\"login_password_register_group\">\n      <div className=\"name_surname_group\">\n        <TextField\n          id=\"name\"\n          variant=\"filled\"\n          label=\"Name\"\n          margin=\"dense\"\n          className={classes2.textField}\n          style={{width: 170}}\n        />\n        <TextField\n          id=\"surname\"\n          variant=\"filled\"\n          label=\"Surname\"\n          margin=\"dense\"\n          className={classes2.textField}\n          style={{width: 170}}\n        />\n      </div>\n      \n        <TextField\n          id=\"newloginTextArea\"\n          className={classes.textField}\n          variant=\"filled\"\n          label=\"write your new login\"\n          margin=\"dense\"\n         \n        />\n        <TextField\n          id=\"newPasswordTextArea\"\n          className={classes.textField}\n          variant=\"filled\"\n          margin=\"dense\"\n          label=\"write your password\"\n          type=\"password\"\n        />   \n        <TextField\n          id=\"newPasswordTextArea\"\n          className={classes.textField}\n          variant=\"filled\"\n          margin=\"dense\"\n          label=\"repeat your password\"\n          type=\"password\"\n        />     \n            \n      </div>\n  \n        <ThemeProvider theme={theme}>\n        <Button \n          variant=\"contained\"\n          color=\"secondary\"\n          className=\"sign_in_button_register\"\n          >Let's start!\n        </Button>\n        </ThemeProvider>\n    </div>\n    \n  )\n}\n\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginBox: 1, \n      loginButton: 1, \n      signin: [null, null],\n      register: [null, null, null, null], \n      signedin: 0\n      \n    };\n  }\n\n  callApi = () => {\n    fetch(\"http://localhost:4000\")\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.data.length)\n        \n      })\n      \n  }\n\n  componentDidMount() {\n    this.callApi(); \n  }\n\n  signinInputHandle = (e) => {\n    if (e.target.value === 'signin' ) {\n      alert(\"hello\")\n    }\n  }\n\n  handleSigninButton = () => {\n    this.setState({\n      loginButton: 1\n    })\n  }\n  handleRegisterButton = () => {\n    this.setState({\n      loginButton: 0\n    })\n  }\n  handleLoginButton = () => {\n    \n    this.setState({\n      loginBox: -this.state.loginBox\n    })\n  }\n  render () {\n    const { classes } = this.props;\n    return  (\n\n      <Container \n        maxWidth=\"sm\"\n      >\n        <div className=\"titleLabel\">\n          <p \n            className=\"titleP\"\n          >CVManager v 1.0\n          </p>\n        </div>\n\n        { this.state.loginBox === 1 ? null : \n        <div><LoginBox \n          buttonSelector = {this.state.loginButton}\n          onclickButton1 = {this.handleSigninButton}\n          onclickButton2 = {this.handleRegisterButton}\n        /> \n        <LoginTextAreas \n          textAreasSelector = {this.state.loginButton}\n        />\n        </div>\n        }\n\n        <ThemeProvider theme={theme}>\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            className={classes.root}\n            onClick={this.handleLoginButton}\n          >\n          Sign in/Sign up\n            \n          </Button>\n        </ThemeProvider>\n        \n      </Container> \n\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(loginButtonStyle)(App);",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":26},{"ruleId":"26","severity":1,"message":"30","line":2,"column":31,"nodeType":"28","messageId":"29","endLine":2,"endColumn":41},{"ruleId":"26","severity":1,"message":"31","line":4,"column":26,"nodeType":"28","messageId":"29","endLine":4,"endColumn":42},{"ruleId":"26","severity":1,"message":"32","line":93,"column":9,"nodeType":"28","messageId":"29","endLine":93,"endColumn":16},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'MuiThemeProvider' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]