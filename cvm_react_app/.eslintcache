[{"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/index.js":"1","/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/reportWebVitals.js":"2","/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/App.js":"3"},{"size":500,"mtime":1608849474730,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608849474730,"results":"6","hashOfConfig":"5"},{"size":19205,"mtime":1615759871059,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"441dku",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/index.js",[],["16","17"],"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/reportWebVitals.js",[],"/Users/Piotr/IT_Projects/CVManager/CVManager/cvm_react_app/src/App.js",["18","19","20","21","22","23","24","25","26"],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from './images/DefaultAvatar.jpg'\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'block',\n      flexWrap: 'wrap',\n      color: '#d41274', \n      \n    },\n    textField: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(0),\n      marginTop: theme.spacing(1),\n      width: '35ch', \n      background: '#fff', \n      borderRadius: 6,\n      \n    },\n  }),\n);\n\nconst loginButtonStyle = theme => ({\n  root: {\n    position: 'absolute',\n    top: '20px',\n    left: '320px',\n    borderRadius: 6,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n});\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#d41274',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#d41274',\n      contrastText: '#fff',\n    },\n  },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n});\ntheme.overrides = {\n  ...theme.overrides,\n  MuiButton: {\n      label: {\n        ...theme.label,\n        color:theme.palette.primary.contrastText,\n      }\n  },\n}\n\nfunction CvRecordItem (props) {\n  \n  return (\n  <div className=\"holderFrame\">\n  <div className=\"cvRecordFrame\">\n    <div className=\"cvRecordItemContent\">\n      <div className=\"cvRecordItemContent_title\">\n      {props.title}\n      </div>\n      <div className=\"cvRecordItemContent_company\">\n      {props.company}\n      </div>\n      <div className=\"cvRecordItemContent_date\">\n      {props.date}\n      </div>\n  \n  </div>\n  \n    <div className=\"cvRecordItemIndicator\">\n\n    </div>\n    <div className=\"cvRecordItemX\">\n      x\n    </div>\n    <div className=\"cvRecordItemC\">\n      c\n    </div>\n  </div>\n  \n  </div> \n  )\n}\n\nfunction LeftMenu (props) {\n  const cvListDataPack = [\n    {\n    title: \"A\", \n    company: \"comp1\",\n    date: \"20.02.2020\"\n    },\n    {\n    title: \"B\", \n    company: \"comp2\",\n    date: \"20.02.2020\"\n    },\n    {\n    title: \"C\", \n    company: \"comp3\",\n    date: \"20.02.2020\"\n    },\n  ]\n  const cvItem = \n    cvListDataPack.map((item) => {\n      \n      return (\n      <CvRecordItem \n        title={item.title}\n        company={item.company}\n        date={item.date}\n      />\n      )\n    })\n  \n  const leftMenuVisibility = 1;\n\n  if (leftMenuVisibility) {\n    \n    return (\n      <div className=\"leftMenuHolder\">\n        <div className=\"leftMenuFrame\">\n          <div className=\"closeBar\" onClick={function ele () {alert(\"hej\")}}>o</div>\n          <div className=\"leftMenu\">\n            <div className=\"titleBox\">\n              CV list\n            </div>\n              <div className=\"cvRecordsList\">\n                {cvItem}\n                \n              </div>\n          </div>\n          \n        </div>\n      \n      </div>\n      )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\n\nfunction WelcomeBox (props) {\n  return (\n    <div className=\"welcomeBoxFrame\">\n      <div className=\"welcomeName\">{props.welcomeName}</div>\n      <div className=\"welcomeSurname\">{props.welcomeSurname}</div>\n      <div className=\"avatar\">\n      <img \n        src={Avatar} \n        alt=\"user avatar\" \n        width=\"50px\"\n        height=\"50px\" \n      \n        />\n      </div>\n      \n    </div>\n  )\n}\n\n\nfunction LoginBox (props) {\n  const loginButtonsStyle = {}; \n  const classes = inputStyles();\n  const loginBoxStyle = {\n    1: \"loginBox_signin\", \n    0: \"loginBox_register\"\n  };\n\n  if (props.buttonSelector === 1) {\n\n    loginButtonsStyle.button1 = \"contained\"; \n    loginButtonsStyle.button2 = null;\n    loginButtonsStyle.colorButton1 = \"primary\";  \n    loginButtonsStyle.colorButton2 = \"secondary\"; \n    \n  } else if (props.buttonSelector === 0 ) {\n\n    loginButtonsStyle.button1 = null; \n    loginButtonsStyle.button2 = \"contained\";\n    loginButtonsStyle.colorButton1 = \"secondary\";  \n    loginButtonsStyle.colorButton2 = \"primary\";  \n\n  }\n\n  return (\n    <div \n      className={loginBoxStyle[props.buttonSelector]}>\n      \n      <ButtonGroup \n        aria-label=\"outlined primary button group\"\n        className=\"activeLoginButton\"\n        >\n      <ThemeProvider theme={theme}>\n     \n        <Button\n          variant={loginButtonsStyle.button1}\n          color={loginButtonsStyle.colorButton1}\n          className=\"loginButtonCustomisation\"\n          onClick = {props.onclickButton1}\n          \n        >Sign in</Button>\n      \n        <Button \n          variant={loginButtonsStyle.button2}\n          color={loginButtonsStyle.colorButton2}\n          className=\"loginButtonCustomisation\"\n          onClick = {props.onclickButton2}\n          >Register\n        </Button>\n\n      </ThemeProvider>\n      </ButtonGroup>\n\n      \n    </div>\n  )\n}\nfunction LoginTextAreas (props) {\n  const classes = inputStyles();\n  const option = props.textAreasSelector; \n\n  if (option === 1) {\n  return (\n  <div>\n    <div className=\"login_password_group\">\n      <TextField\n        id=\"login\"\n        className={classes.textField}\n        variant=\"filled\"\n        label=\"Please enter your login\"\n        margin=\"dense\"\n        onChange={props.onChangeTextAreasSigninHandler}\n        \n      />\n      <TextField\n        id=\"password\"\n        className={classes.textField}\n        variant=\"filled\"\n        margin=\"dense\"\n        label=\"Please enter your password\"\n        type=\"password\" \n        onChange={props.onChangeTextAreasSigninHandler}  \n      />    \n          \n    </div>\n\n      <ThemeProvider theme={theme}>\n      <Button \n        variant=\"contained\"\n        color=\"secondary\"\n        className=\"sign_in_button_signin\"\n        onClick = {props.onClickLetStartButton}\n        >Let's start!\n      </Button>\n      </ThemeProvider>\n  </div>\n  \n)} else if (option === 0) {\n  return (\n    <div>\n      <div className=\"login_password_register_group\">\n      \n        <TextField\n          id=\"name\"\n          variant=\"filled\"\n          label=\"Name\"\n          margin=\"dense\"\n          className={classes.textField}\n          onChange = {props.onChangeTextAreasRegisterHandler}\n          helperText={props.nameError}\n          error={props.nameShowError}\n          \n        />\n        <TextField\n          id=\"surname\"\n          variant=\"filled\"\n          label=\"Surname\"\n          margin=\"dense\"\n          className={classes.textField}\n          onChange = {props.onChangeTextAreasRegisterHandler}\n          helperText={props.surnameError}\n          error={props.surnameShowError}\n        />\n      \n      <TextField\n          id=\"email\"\n          className={classes.textField}\n          variant=\"filled\"\n          label=\"Email\"\n          margin=\"dense\"\n          onChange = {props.onChangeTextAreasRegisterHandler}\n          helperText={props.emailError}\n          error={props.emailShowError}\n          \n         \n        />\n\n        <TextField\n          id=\"password\"\n          className={classes.textField}\n          variant=\"filled\"\n          margin=\"dense\"\n          label=\"Password\"\n          type=\"password\"\n          onChange = {props.onChangeTextAreasRegisterHandler}\n          helperText={props.passwordError}\n          error={props.passwordShowError}\n        />   \n        <TextField\n          id=\"repeat_password\"\n          className={classes.textField}\n          variant=\"filled\"\n          margin=\"dense\"\n          label=\"Repeat password\"\n          type=\"password\"\n          onChange = {props.onChangeTextAreasRegisterHandler}\n          helperText={props.passwordDBCheckError}\n          error={props.passwordDBCheckShowError}\n          \n        />     \n            \n      </div>\n  \n        <ThemeProvider theme={theme}>\n        <Button \n          variant=\"contained\"\n          color=\"secondary\"\n          className=\"sign_in_button_register\"\n          onClick = {props.onClickLetStartButton}\n          >Let's start!\n        </Button>\n        </ThemeProvider>\n    </div>\n    \n  )\n}\n\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginBox: 1, \n      loginButton: 1, \n      signin: [null, null],\n      register: ['', '', '', '', ''], \n      signedin: 0,\n      recognisedUser: 0, \n      namePrompt: 'max 10 characters, no numbers', \n      nameError: true,\n      surnamePrompt: 'max 10 characters, no numbers', \n      surnameError: true,\n      emailPrompt: 'please provide correct email',\n      emailError: true,\n      passwordPrompt: 'please provide password using maximum 10 characters', \n      passwordError: true, \n      passwordDBCheckPrompt: 'provided passwords are not equal or password not provided', \n      passwordDBCheckError: true, \n      welcomeName: \"Piotr\", \n      welcomeSurname: \"Sendor\", \n      leftMenuOpen: 1\n\n      \n      \n    };\n  }\n\n  callApi = () => {\n    fetch(\"http://localhost:4000\")\n      .then(res => res.json())\n      .then(res => {\n        console.log(res.data.length)\n        \n      })\n      \n  }\n\n  componentDidMount() {\n    this.callApi(); \n  }\n\n  handleRegisterInput = (e) => {\n    const register_copy = this.state.register; \n\n{/*validator input*/}\n    let validator = () => {\n      let letterFormat = /^[a-zA-Z]+$/; \n      let emailFormat = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\n\n      if (\n        this.state.register[0].match(letterFormat) \n        && this.state.register[0].length < 10) \n          {\n            this.setState({\n            namePrompt: \"done\", \n            nameError: false\n        })\n        \n      } else if (\n        !this.state.register[0].match(letterFormat) \n        && this.state.register[0].length < 10 ){\n          this.setState({\n            namePrompt: \"Please delete any numbers and special characters\"\n        })\n      } else if (\n        this.state.register[0].match(letterFormat) \n        && this.state.register[0].length > 10 ) {\n        this.setState({\n          namePrompt: \"Please provide maximum 10 characters\"\n        })\n      }\n\n            if (\n              this.state.register[1].match(letterFormat) \n              && this.state.register[1].length < 10) \n                {\n                  this.setState({\n                  surnamePrompt: \"done\", \n                  surnameError: false\n              })\n              \n                } else if (\n                  !this.state.register[1].match(letterFormat) \n                  && this.state.register[1].length < 10 ){\n                \n                    this.setState({\n                      surnamePrompt: \"Please delete any numbers and special characters\"\n                  })\n                \n                } else if (\n                  this.state.register[1].match(letterFormat) \n                  && this.state.register[1].length > 10 ) {\n              \n                    this.setState({\n                      surnamePrompt: \"Please provide maximum 10 characters\"\n                    })\n                }\n\n\n            if (\n              this.state.register[2].match(emailFormat) \n              ) \n                {\n                  this.setState({\n                  emailPrompt: \"done\", \n                  emailError: false\n              })\n              \n            } \n            \n\n            if (\n              !this.state.register[2].match(emailFormat) \n            )\n\n                {\n                  this.setState({\n                  emailPrompt: \"Please provide correct email\", \n                  emailError: true\n              })\n              \n            } \n\n            if (\n              this.state.register[3].length <= 12 \n              && this.state.register[3].length > 6) \n                {\n                  this.setState({\n                  passwordPrompt: \"done\", \n                  passwordError: false\n              })\n              \n            } else if (\n              this.state.register[3].length > 12 \n              || this.state.register[3].length < 6) {\n                this.setState({\n                  passwordPrompt: \"Please provide password contains at least of 6 characters and no more then 12\", \n                  passwordError: true\n              })\n            } \n\n            if (this.state.register[3] !== this.state.register[4]) {\n              this.setState({\n                passwordDBCheckPrompt: 'passwords are not equal', \n                passwordDBCheckError: true\n              })\n            }\n\n            if (this.state.register[3] === this.state.register[4]) {\n              this.setState({\n                passwordDBCheckPrompt: 'done', \n                passwordDBCheckError: false\n              })\n            }\n         \n    }\n{/*validator end*/}\n\n\n    if (e.target.id === \"name\" ) {\n      register_copy[0] = e.target.value; \n\n      this.setState({\n        register: register_copy\n      })\n     } else if (e.target.id === \"surname\" ) {\n      register_copy[1] = e.target.value; \n\n      this.setState({\n        register: register_copy\n      })\n     } else if (e.target.id === \"email\" ) {\n      register_copy[2] = e.target.value; \n\n      this.setState({\n        register: register_copy\n      })\n     } else if (e.target.id === \"password\" ) {\n      register_copy[3] = e.target.value; \n\n      this.setState({\n        register: register_copy\n      })\n\n     } else if (e.target.id === \"repeat_password\" ) {\n      register_copy[4] = e.target.value; \n\n      this.setState({\n        register: register_copy\n      })\n     }\n\n     validator();\n  }\n   handleSigninInput = (e) => {\n    const signin_copy = this.state.signin; \n\n    if (e.target.id === \"login\" ) {\n      signin_copy[0] = e.target.value; \n\n      this.setState({\n        register: signin_copy\n      })\n     } else if (e.target.id === \"password\" ) {\n      signin_copy[1] = e.target.value; \n\n      this.setState({\n        register: signin_copy\n      })\n     } \n  }\n\n  handleLetsStartButton = () => {\n    const userDataPack = \n      this.state.register.slice(0,4);\n\n    let checkAllFormErrors = () => {\n      if (this.state.nameError\n        || this.state.surnameError\n        || this.state.emailError\n        || this.state.passwordError\n        || this.state.passwordDBCheckError) {\n          \n          return false\n\n        } else {\n          \n          return true\n        }\n    }\n    checkAllFormErrors()\n\n      \n  let fillWelcomeNames = (name, surname) => {\n    this.setState({\n      welcomeName: name,\n      welcomeSurname: surname, \n      recognisedUser: 1, \n      loginBox: 1\n    })\n  }\n\n    {/* when in login mode*/}\n    if (this.state.loginButton === 1) {\n\n      let loginPack = {\n        login: this.state.signin[0],\n         password: this.state.signin[1]\n     }\n      \n      function checkAllLoginForms (userLoginPack) {\n        const that = this; \n        {/* if login anf password are present - send POST*/}\n\n        if (loginPack.login !== null && loginPack.password !== null) {\n          \n          console.log(\"wysylka: \" + loginPack.login)\n\n\n          const requestOptions = {\n            method: 'POST', \n            headers: {\n              'Content-Type': 'application/json', \n              'Accept': 'application/json'}, \n              body: JSON.stringify(loginPack)\n            }\n\n          fetch('http://localhost:4000/login', requestOptions)\n          .then(response => response.json())\n          .then((body) => {\n            if (body.info) {\n              alert(body.info)\n            } else {\n              fillWelcomeNames(body.name, body.surname)\n              console.log(body)\n            }\n            \n            \n          });\n\n        } else {\n          alert(\"Please provide correct login/password\")\n        }\n      }\n\n     checkAllLoginForms(); \n\n\n    } else if (this.state.loginButton === 0) \n    {\n      \n\n      if (checkAllFormErrors()) {\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json',\n        'Accept': 'application/json' },\n        body: JSON.stringify({userDataPack})\n      };\n\n        fetch('http://localhost:4000/register_new_user', requestOptions)\n        .then(response => response.json())\n        .then((body) => {\n            alert(body.info)\n             console.log(body);\n        });  \n    } else {\n      alert(\"Please fix errors in register form\")\n    }\n  \n  }} \n\n  handleOpenLeftMenuBar = () => {\n    this.setState({\n      leftMenuOpen: -this.leftMenuOpen\n    })\n  }\n  handleSigninButton = () => {\n    this.setState({\n      loginButton: 1\n    })\n  }\n  handleRegisterButton = () => {\n    this.setState({\n      loginButton: 0\n    })\n  }\n  handleLoginButton = () => {\n    \n    this.setState({\n      loginBox: -this.state.loginBox\n    })\n  }\n  render () {\n    const { classes } = this.props;\n    return  (\n\n      <Container \n        maxWidth=\"sm\">\n\n        <div className=\"titleLabel\">\n          <p \n            className=\"titleP\"\n          >CVManager v 1.0\n          </p>\n        </div>\n        \n        <div className=\"brutal\">\n        { this.state.loginBox === 1 ? null : \n        <div><LoginBox \n          buttonSelector = {this.state.loginButton}\n          onclickButton1 = {this.handleSigninButton}\n          onclickButton2 = {this.handleRegisterButton}\n        /> \n        <LoginTextAreas \n          textAreasSelector = {this.state.loginButton}\n          onChangeTextAreasRegisterHandler = {this.handleRegisterInput}\n          onChangeTextAreasSigninHandler = {this.handleSigninInput}\n          onClickLetStartButton = {this.handleLetsStartButton}\n          nameError = {this.state.namePrompt}\n          nameShowError = {this.state.nameError}\n          surnameError = {this.state.surnamePrompt}\n          surnameShowError = {this.state.surnameError}\n          emailError = {this.state.emailPrompt}\n          emailShowError = {this.state.emailError}\n          passwordError = {this.state.passwordPrompt}\n          passwordShowError = {this.state.passwordError}\n          passwordDBCheckError = {this.state.passwordDBCheckPrompt}\n          passwordDBCheckShowError = {this.state.passwordDBCheckError}\n         \n          \n        />\n        </div>\n        }\n\n        <ThemeProvider theme={theme}>\n          {this.state.recognisedUser === 1 ? \n          \n            <WelcomeBox\n              welcomeName = {this.state.welcomeName}\n              welcomeSurname = {this.state.welcomeSurname}\n            ></WelcomeBox>\n          : \n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            className={classes.root}\n            onClick={this.handleLoginButton}\n          >\n          Sign in/Sign up\n            \n          </Button>\n          }\n\n          <LeftMenu \n            leftMenuBarOnClick = {this.handleOpenLeftMenuBar}\n          />\n\n          \n        </ThemeProvider>\n        </div>\n\n        \n      </Container> \n\n    )\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(loginButtonStyle)(App);",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":26},{"ruleId":"31","severity":1,"message":"35","line":2,"column":31,"nodeType":"33","messageId":"34","endLine":2,"endColumn":41},{"ruleId":"31","severity":1,"message":"36","line":4,"column":26,"nodeType":"33","messageId":"34","endLine":4,"endColumn":42},{"ruleId":"31","severity":1,"message":"37","line":189,"column":9,"nodeType":"33","messageId":"34","endLine":189,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":411,"column":1,"nodeType":"40","messageId":"41","endLine":411,"endColumn":22},{"ruleId":"38","severity":1,"message":"39","line":524,"column":1,"nodeType":"40","messageId":"41","endLine":524,"endColumn":20},{"ruleId":"38","severity":1,"message":"39","line":610,"column":5,"nodeType":"40","messageId":"41","endLine":610,"endColumn":30},{"ruleId":"31","severity":1,"message":"42","line":619,"column":15,"nodeType":"33","messageId":"34","endLine":619,"endColumn":19},{"ruleId":"38","severity":1,"message":"39","line":620,"column":9,"nodeType":"40","messageId":"41","endLine":620,"endColumn":61},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'MuiThemeProvider' is defined but never used.","'classes' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'that' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]